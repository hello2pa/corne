/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAIN 0
#define ARROW 1
#define NUMS 2
#define NMPAD 3
#define FUN 4


/ {
        keymap {
                compatible = "zmk,keymap";

                main_layer {
            // ---------------------------------------------------------------------------------------------------
            // | TAB |  Q  |  W  |  E  |  R  |  T  |                        |  Y  |  U  |  I  |  O  |  P  | DEL/ESC |
            // |LCTRL|  A  |  S  |  D  |  F  |  G  |                        |  H  |  J  |  K  |  L  |  :  |  "  |
            // |LSHFT|  Z  |  X  |  C  |  V  |  B  |                        |  N  |  M  |  ,  |  .  |  /  |RSHFT|
            //                        | ARW | LCMD | SPACE |         | RTRN | NUMS | RALT |
            // ---------------------------------------------------------------------------------------------------
                        bindings = <
                &kp TAB   &kp Q &kp W &kp E &kp R &kp T                           &kp Y &kp U  &kp I     &kp O   &kp P    &dlesc
                &kp LCTRL &kp A &kp S &kp D &kp F &kp G                           &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B                           &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                                        &mo ARROW &kp LGUI &kp SPACE      &kp RET &mo NUMS &kp RALT
                        >;
                };
                arrow_layer {
            // ---------------------------------------------------------------------------------------------------
            // |     |     |     |     |     |     |                        |     |     |  UP |     |     |     |
            // |     |     |     |     |     |     |                        |     | LFT | DWN | RGT |     |     |
            // |     |     |     |     |     |     |                        |     |     |     |     |     |     |
            //                         |     |     |      |          |      |     |     |
            // ---------------------------------------------------------------------------------------------------
                        bindings = <
                &trans &trans &trans &trans &trans &trans                    &trans &trans    &kp UP    &trans    &trans &trans
                &trans &trans &trans &trans &trans &trans                    &trans &kp LEFT  &kp DOWN  &kp RIGHT &trans &trans
                &trans &trans &trans &trans &trans &trans                    &trans &trans    &trans    &trans    &trans &trans
                                            &to NUMS &trans &trans     &trans &trans &trans
                        >;
                };
                numbers_layer {
            // ---------------------------------------------------------------------------------------------------
            // |     |  1  |  2  |  3  |  4  |  5  |                        |  6  |  7  |  8  |  9  |  0  |  _  |
            // |     |  !  |  @  |  #  |  $  |  %  |                        |  ^  |  &  |  *  |  [  |  ]  |  +  |
            // |     |     |     |     | FUN |NMPAD|                        |  `  |  ~  | "|" |  {  |  }  |     |
            //                         | LCK |     |      |          |      | NUMS |     |
            // ---------------------------------------------------------------------------------------------------
                        bindings = <
                &trans   &kp N1   &kp N2  &kp N3   &kp N4   &kp N5           &kp N6    &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
                &trans   &kp EXCL &kp AT  &kp HASH &kp DLLR &kp PRCNT        &kp CARET &kp AMPS   &kp STAR   &kp LBKT  &kp RBKT  &kp EQUAL
                &trans   &to FUN  &kp X   &kp C    &to FUN  &to NMPAD        &kp GRAVE &kp TILDE  &kp NUBS   &kp LBRC  &kp RBRC  &trans
                                                 &to NUMS &trans &trans     &trans &trans  &trans
                        >;
                };
                numpad_layer {
            // ---------------------------------------------------------------------------------------------------
            // |     |     |     |     |     |     |                        |     |  7  |  8  |  9  |  +  |     |
            // |     |     |     |     |     |     |                        |  :  |  4  |  5  |  6  |  *  |     |
            // |     |     |     |     |     |     |                        |  ^  |  1  |  2  |  3  |  /  |     |
            //                         |     |     |      |          | bspc |  0  |     |
            // ---------------------------------------------------------------------------------------------------
                        bindings = <
                &trans &trans &trans &trans &trans &trans                    &trans    &kp N7   &kp N8   &kp N9   &kp EQUAL &to MAIN
                &trans &trans &trans &trans &trans &trans                    &kp SEMI  &kp N4   &kp N5   &kp N6   &kp STAR  &trans
                &trans &trans &trans &trans &trans &trans                    &kp CARET &kp N1   &kp N2   &kp N3   &kp FSLH  &trans
                                            &trans &trans &trans     &BSPC &kp N0 &trans
                        >;
                };
                fun_layer {
            // ---------------------------------------------------------------------------------------------------
            // |     |     |     |     |     |     |                        |     |     |     |btclr| bt1 |     |
            // |     |     |     |     |     |     |                        |     |     |     |     | bt2 |     |
            // |     |     |     |     |     |     |                        |     |     |     |     | bt3 |     |
            //                         |     |     |      |          |      |     |     |
            // ---------------------------------------------------------------------------------------------------
                        bindings = <
                &kp N1 &trans &trans &trans &trans &trans                    &trans &trans    &bt BT_CLR    &bt BT_SEL 1    &trans &to MAIN
                &trans &trans &trans &trans &trans &trans                    &trans &trans  &trans  &bt BT_SEL 2 &trans &trans
                &trans &trans &trans &trans &trans &trans                    &trans &trans    &trans    &bt BT_SEL 3    &trans &trans
                                            &trans &trans &trans     &trans &trans &trans
                        >;
                };
        };
        behaviors {
        dlesc: delete_escape {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp ESC>;
            mods = <(MOD_RSFT)>;
        };
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&to>, <&mo>;
            display-name = "Layer-Tap";
        };
    };
};

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};
